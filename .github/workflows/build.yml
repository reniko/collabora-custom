name: Build and Push to GHCR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  # Automatischer Trigger bei Upstream-Ã„nderungen
  schedule:
    # LÃ¤uft tÃ¤glich um 6:00 UTC
    - cron: '0 6 * * *'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/collabora-locale
  UPSTREAM_IMAGE: collabora/code

jobs:
  # Job zur ÃœberprÃ¼fung von Upstream-Updates
  check-upstream:
    runs-on: ubuntu-latest
    outputs:
      needs-update: ${{ steps.check.outputs.needs-update }}
      upstream-digest: ${{ steps.check.outputs.upstream-digest }}
    steps:
      - name: Check for upstream updates
        id: check
        run: |
          # Aktueller Digest des Upstream-Images
          UPSTREAM_DIGEST=$(docker manifest inspect ${{ env.UPSTREAM_IMAGE }}:latest | jq -r '.config.digest')
          echo "upstream-digest=$UPSTREAM_DIGEST" >> $GITHUB_OUTPUT
          
          # PrÃ¼fe ob unser letztes Build auf einem anderen Digest basiert
          LAST_BUILD_DIGEST=$(gh api repos/${{ github.repository }}/actions/variables/LAST_UPSTREAM_DIGEST --jq '.value' 2>/dev/null || echo "")
          
          if [[ "$UPSTREAM_DIGEST" != "$LAST_BUILD_DIGEST" ]] || [[ "${{ github.event_name }}" != "schedule" ]]; then
            echo "needs-update=true" >> $GITHUB_OUTPUT
            echo "ðŸ”„ Upstream update detected or manual trigger"
          else
            echo "needs-update=false" >> $GITHUB_OUTPUT
            echo "âœ… No upstream updates needed"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=run_number

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
